{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilipkumarromi/ProjectMananger2/src/app/issue-list.tsx"],"sourcesContent":["'use client'\nimport React, { useState } from \"react\";\nimport {\n  DndContext,\n  closestCenter,\n  DragEndEvent,\n} from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\n\nimport {\n  IconChevronDown,\n  IconChevronCompactRight,\n  IconCircle,\n} from \"@tabler/icons-react\";\nimport moment from \"moment\";\n\nimport { DropdownMenuIssueAction } from \"@/components/dropdown\";\n\n// SortableItem Component\ninterface Issue {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n  priority: string;\n  type: string;\n  createdAt: string;\n}\n\nfunction SortableItem({\n  issue,\n  sectionType,\n  onRightClick,\n}: {\n  issue: Issue;\n  sectionType: string;\n  onRightClick: (e: React.MouseEvent) => void;\n}) {\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({\n      id: issue.id.toString(),\n      data: {\n        type: sectionType,\n        id: issue.id,\n      },\n    });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <li\n      ref={setNodeRef}\n      style={style}\n      {...attributes}\n      {...listeners}\n      className=\"flex justify-between p-1 hover:bg-gray-100 cursor-grab\"\n      onContextMenu={(e) => {\n        e.preventDefault();\n        onRightClick(e);\n      }}\n    >\n      <div className=\"flex space-x-1 text-sm\">\n        <span className=\"text-gray-500 cursor-pointer\">---</span>\n        <span className=\"text-gray-500\">STU-{issue.id}</span>\n        <span className=\"text-gray-500\">\n          <IconCircle size={17} />\n        </span>\n        <span className=\"text-gray-800\">{issue.title}</span>\n        <span className=\"text-gray-500\">{issue.description}</span>\n      </div>\n      <div className=\"flex items-center space-x-1 text-gray-500\">\n        <span className=\"text-sm text-gray-500\">{issue.createdAt}</span>\n      </div>\n    </li>\n  );\n}\n\nexport function TableDemo() {\n  const [dropdownStates, setDropdownStates] = useState<Record<string, boolean>>({\n    todo: true,\n    \"in progress\": true,\n    cancel: false,\n    done: false,\n  });\n\n  const [issueActionDropdown, setIssueActionDropdown] = useState(false);\n  const [position, setPosition] = useState<{ x: number; y: number } | null>(\n    null\n  );\n\n  const handleRightClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setPosition({ x: e.clientX, y: e.clientY });\n    setIssueActionDropdown(true);\n  };\n\n  const [data, setData] = useState([\n    {\n      type: \"todo\",\n      issue_list: [\n        {\n          id: 1,\n          title: \"Connect your tools\",\n          description: \"(3)\",\n          status: \"Open\",\n          priority: \"High\",\n          type: \"todo\",\n          createdAt: moment(\"2023-07-25\").format(\"MMM Do YY\"),\n        },\n        {\n          id: 5,\n          title: \"Review design specs\",\n          description: \"(2)\",\n          status: \"Open\",\n          priority: \"Low\",\n          type: \"todo\",\n          createdAt: moment(\"2023-07-25\").format(\"MMM Do YY\"),\n        },\n      ],\n    },\n    {\n      type: \"in progress\",\n      issue_list: [\n        {\n          id: 2,\n          title: \"Build dashboard UI\",\n          description: \"(5)\",\n          status: \"In Progress\",\n          priority: \"Medium\",\n          type: \"in progress\",\n          createdAt: moment(\"2023-07-26\").format(\"MMM Do YY\"),\n        },\n      ],\n    },\n    {\n      type: \"cancel\",\n      issue_list: [],\n    },\n    {\n      type: \"done\",\n      issue_list: [],\n    },\n  ]);\n\n  const toggleDropdown = (type: string) => {\n    setDropdownStates((prevState) => ({\n      ...prevState,\n      [type]: !prevState[type],\n    }));\n  };\n\n  const onDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n\n    if (!over) return;\n\n    const sourceType = active.data.current?.type;\n    const destinationType = over.data.current?.type;\n\n    if (!sourceType || !destinationType) return;\n\n    const sourceId = active.id;\n    const destinationId = over.id;\n\n    const sourceSection = data.find((section) => section.type === sourceType);\n    const destinationSection = data.find((section) => section.type === destinationType);\n\n    if (!sourceSection || !destinationSection) return;\n\n    const draggedItemIndex = sourceSection.issue_list.findIndex(\n      (item) => item.id.toString() === sourceId.toString()\n    );\n\n    const draggedItem = sourceSection.issue_list[draggedItemIndex];\n\n    if (sourceType === destinationType) {\n      // Reorder within the same list\n      const overIndex = sourceSection.issue_list.findIndex(\n        (item) => item.id.toString() === destinationId.toString()\n      );\n\n      const updatedList = [...sourceSection.issue_list];\n      updatedList.splice(draggedItemIndex, 1);\n      updatedList.splice(overIndex, 0, draggedItem);\n\n      const updatedSections = data.map((section) =>\n        section.type === sourceType\n          ? { ...section, issue_list: updatedList }\n          : section\n      );\n\n      setData(updatedSections);\n    } else {\n      // Move to different section\n      const updatedSourceList = [...sourceSection.issue_list];\n      updatedSourceList.splice(draggedItemIndex, 1);\n\n      const updatedDestinationList = [...destinationSection.issue_list, {\n        ...draggedItem,\n        type: destinationType, // update the type\n      }];\n\n      const updatedSections = data.map((section) => {\n        if (section.type === sourceType) {\n          return { ...section, issue_list: updatedSourceList };\n        } else if (section.type === destinationType) {\n          return { ...section, issue_list: updatedDestinationList };\n        }\n        return section;\n      });\n\n      setData(updatedSections);\n    }\n  };\n\n  return (\n    <DndContext\n      collisionDetection={closestCenter}\n      onDragEnd={onDragEnd}\n    >\n      <div className=\"bg-white shadow-md rounded-md\">\n        {data.map((section) => (\n          <SortableContext\n            key={section.type}\n            items={section.issue_list.map((issue) => issue.id.toString())}\n            strategy={verticalListSortingStrategy}\n          >\n            {/* Header */}\n            <div className=\"flex items-center justify-between border bg-gray-100\">\n              <div className=\"flex items-center justify-between w-full\">\n                <span\n                  className=\"text-sm cursor-pointer\"\n                  onClick={() => toggleDropdown(section.type)}\n                >\n                  <span className=\"flex cursor-pointer p-1\">\n                    {dropdownStates[section.type] ? (\n                      <IconChevronDown size={12} />\n                    ) : (\n                      <IconChevronCompactRight size={12} />\n                    )}\n                    <span className=\"text-sm ml-2 capitalize\">\n                      {section.type} ({section.issue_list.length})\n                    </span>\n                  </span>\n                </span>\n              </div>\n            </div>\n\n            {/* Issue List */}\n            {dropdownStates[section.type] && (\n              <div className=\"p-2\">\n                <ul className=\"space-y-1\">\n                  {section.issue_list.map((issue) => (\n                    <SortableItem\n                      key={issue.id}\n                      issue={issue}\n                      sectionType={section.type}\n                      onRightClick={handleRightClick}\n                    />\n                  ))}\n                  {section.issue_list.length === 0 && (\n                    <li className=\"p-2 text-gray-500 text-sm italic\">\n                      Drag items here\n                    </li>\n                  )}\n                </ul>\n              </div>\n            )}\n          </SortableContext>\n        ))}\n      </div>\n    </DndContext>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilipkumarromi/ProjectMananger2/src/app/page.tsx"],"sourcesContent":["\"use client\";\n// import\"./components.css\"\nimport React, { useState } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { SidebarContent } from \"@/components/ui/sidebar\";\nimport { TableDemo } from \"./issue-list\";\n \n \nconst IssueDetailPage: React.FC = () => {\n  return (\n    <>\n      <SidebarContent>\n      <TableDemo/>\n      \n      </SidebarContent>\n    </>\n  );\n};\n\nexport default IssueDetailPage;\n"],"names":[],"mappings":";;;;AAaA;AACA;AAdA;;;;AAiBA,MAAM,kBAA4B;IAChC,qBACE;kBACE,cAAA,8OAAC,mIAAA,CAAA,iBAAc;sBACf,cAAA,8OAAC,4HAAA,CAAA,YAAS;;;;;;;;;;;AAKhB;uCAEe","debugId":null}}]
}