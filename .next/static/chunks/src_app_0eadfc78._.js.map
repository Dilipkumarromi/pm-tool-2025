{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilipkumarromi/ProjectMananger2/src/app/issue-list.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { DndContext, closestCenter, DragEndEvent } from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport { useDroppable } from \"@dnd-kit/core\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { IconChevronDown, IconChevronCompactRight, IconCircle } from \"@tabler/icons-react\";\nimport { CircleDotDashed } from \"lucide-react\";\nimport moment from \"moment\";\n\n// Dummy components for demo purposes\nconst IssueStatus = ({ isOpen, onOpenChange, onActionSelect }) => {\n  if (!isOpen) return null;\n  return (\n    <div className=\"bg-white border p-2 rounded shadow-lg\">\n      <p className=\"text-sm\">Issue Status Menu</p>\n      <button onClick={() => onActionSelect(\"Done\")} className=\"text-blue-600\">Set to Done</button>\n      <button onClick={() => onOpenChange(false)} className=\"ml-2 text-red-500\">Close</button>\n    </div>\n  );\n};\n\nconst DropdownMenuIssueAction = ({ isOpen, onOpenChange, dropdownPosition, onActionSelect }) => {\n  if (!isOpen) return null;\n  return (\n    <div\n      className=\"bg-white border p-2 rounded shadow-lg\"\n      style={{ position: \"absolute\", top: dropdownPosition?.y, left: dropdownPosition?.x }}\n    >\n      <p className=\"text-sm\">Context Menu</p>\n      <button onClick={() => onActionSelect(\"Edit\")}>Edit</button>\n      <button onClick={() => onOpenChange(false)} className=\"ml-2 text-red-500\">Close</button>\n    </div>\n  );\n};\n\n// Types\ninterface Issue {\n  id: number;\n  title: string;\n  description: string;\n  createdAt: string;\n  type: string;\n}\n\nfunction SortableItem({\n  issue,\n  sectionType,\n  onRightClick,\n  onStatusClick,\n}: {\n  issue: Issue;\n  sectionType: string;\n  onRightClick: (e: React.MouseEvent) => void;\n  onStatusClick: (issue: Issue) => void;\n}) {\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({\n    id: issue.id.toString(),\n    data: { type: sectionType, id: issue.id },\n  });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <li\n      ref={setNodeRef}\n      style={style}\n      {...attributes}\n      {...listeners}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        onRightClick(e);\n      }}\n      className=\"flex justify-between items-center p-2 border-b cursor-pointer hover:bg-gray-50\"\n    >\n      <div className=\"flex items-center space-x-2\">\n        <span>STU-{issue.id}</span>\n        <span onClick={() => onStatusClick(issue)} className=\"text-gray-600 cursor-pointer\">\n          <IconCircle size={17} />\n        </span>\n        <span>{issue.title}</span>\n        <span className=\"text-gray-400\">{issue.description}</span>\n      </div>\n      <div className=\"flex items-center space-x-1 text-gray-500 text-sm\">\n        <CircleDotDashed size={15} />\n        <span>{issue.createdAt}</span>\n      </div>\n    </li>\n  );\n}\n\nfunction DroppableContainer({ id, children }: { id: string; children: React.ReactNode }) {\n  const { setNodeRef } = useDroppable({ id, data: { type: id } });\n  return <div ref={setNodeRef} className=\"min-h-[40px]\">{children}</div>;\n}\n\nexport function TableDemo() {\n  const [dropdownStates, setDropdownStates] = useState({\n    todo: true,\n    done: true,\n  });\n\n  const [data, setData] = useState([\n    {\n      type: \"todo\",\n      issue_list: [\n        {\n          id: 1,\n          title: \"First Task\",\n          description: \"(3)\",\n          type: \"todo\",\n          createdAt: moment().format(\"MMM Do YY\"),\n        },\n      ],\n    },\n    {\n      type: \"done\",\n      issue_list: [\n        {\n          id: 2,\n          title: \"Completed Task\",\n          description: \"(1)\",\n          type: \"done\",\n          createdAt: moment().format(\"MMM Do YY\"),\n        },\n      ],\n    },\n  ]);\n\n  const [contextMenuPosition, setContextMenuPosition] = useState<{ x: number; y: number } | null>(null);\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [activeIssueForStatus, setActiveIssueForStatus] = useState<Issue | null>(null);\n\n  const handleRightClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n    setShowContextMenu(true);\n  };\n\n  const handleStatusClick = (issue: Issue) => {\n    setActiveIssueForStatus(issue);\n  };\n\n  const onDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n    if (!over) return;\n\n    const sourceType = active.data.current?.type;\n    const destinationType = over.data.current?.type;\n    if (!sourceType || !destinationType) return;\n\n    const sourceSection = data.find((section) => section.type === sourceType);\n    const destinationSection = data.find((section) => section.type === destinationType);\n    if (!sourceSection || !destinationSection) return;\n\n    const draggedIndex = sourceSection.issue_list.findIndex((i) => i.id.toString() === active.id.toString());\n    const draggedItem = sourceSection.issue_list[draggedIndex];\n\n    if (sourceType === destinationType) {\n      const overIndex = destinationSection.issue_list.findIndex((i) => i.id.toString() === over.id.toString());\n      const updatedList = [...sourceSection.issue_list];\n      updatedList.splice(draggedIndex, 1);\n      updatedList.splice(overIndex, 0, draggedItem);\n\n      const updatedSections = data.map((section) =>\n        section.type === sourceType ? { ...section, issue_list: updatedList } : section\n      );\n      setData(updatedSections);\n    } else {\n      const updatedSourceList = [...sourceSection.issue_list];\n      updatedSourceList.splice(draggedIndex, 1);\n\n      const updatedDestinationList = [...destinationSection.issue_list, { ...draggedItem, type: destinationType }];\n\n      const updatedSections = data.map((section) => {\n        if (section.type === sourceType) {\n          return { ...section, issue_list: updatedSourceList };\n        } else if (section.type === destinationType) {\n          return { ...section, issue_list: updatedDestinationList };\n        }\n        return section;\n      });\n\n      setData(updatedSections);\n    }\n  };\n\n  return (\n    <DndContext collisionDetection={closestCenter} onDragEnd={onDragEnd}>\n      <div className=\"bg-white rounded-md shadow-md p-4 relative\">\n        {data.map((section) => (\n          <SortableContext\n            key={section.type}\n            items={section.issue_list.map((issue) => issue.id.toString())}\n            strategy={verticalListSortingStrategy}\n          >\n            <div className=\"mb-4\">\n              <div className=\"flex justify-between bg-gray-100 px-2 py-1 border\">\n                <span onClick={() => setDropdownStates((prev) => ({ ...prev, [section.type]: !prev[section.type] }))} className=\"flex items-center cursor-pointer\">\n                  {dropdownStates[section.type] ? <IconChevronDown size={12} /> : <IconChevronCompactRight size={12} />}\n                  <span className=\"ml-2 capitalize\">{section.type} ({section.issue_list.length})</span>\n                </span>\n                <button className=\"text-sm text-gray-500 hover:text-gray-700\">+</button>\n              </div>\n\n              {dropdownStates[section.type] && (\n                <DroppableContainer id={section.type}>\n                  <ul className=\"space-y-2\">\n                    {section.issue_list.map((issue) => (\n                      <SortableItem\n                        key={issue.id}\n                        issue={issue}\n                        sectionType={section.type}\n                        onRightClick={handleRightClick}\n                        onStatusClick={handleStatusClick}\n                      />\n                    ))}\n                  </ul>\n                </DroppableContainer>\n              )}\n            </div>\n          </SortableContext>\n        ))}\n\n        {/* Right-click Dropdown */}\n        {showContextMenu && contextMenuPosition && (\n          <DropdownMenuIssueAction\n            isOpen={showContextMenu}\n            dropdownPosition={contextMenuPosition}\n            onOpenChange={setShowContextMenu}\n            onActionSelect={(action) => {\n              console.log(\"Context Menu Action:\", action);\n              setShowContextMenu(false);\n            }}\n          />\n        )}\n\n        {/* Icon-click Issue Status Dropdown */}\n        {activeIssueForStatus && (\n          <div className=\"absolute top-20 right-10 z-50\">\n            <IssueStatus\n              isOpen={!!activeIssueForStatus}\n              onOpenChange={(open) => {\n                if (!open) setActiveIssueForStatus(null);\n              }}\n              onActionSelect={(action) => {\n                console.log(\"Status Action:\", action);\n                setActiveIssueForStatus(null);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </DndContext>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///Users/dilipkumarromi/ProjectMananger2/src/app/page.tsx"],"sourcesContent":["\"use client\";\n// import\"./components.css\"\nimport React, { useState } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { SidebarContent } from \"@/components/ui/sidebar\";\nimport { TableDemo } from \"./issue-list\";\n \n \nconst IssueDetailPage: React.FC = () => {\n  return (\n    <>\n      <SidebarContent>\n      <TableDemo/>\n      \n      </SidebarContent>\n    </>\n  );\n};\n\nexport default IssueDetailPage;\n"],"names":[],"mappings":";;;;AAaA;AACA;AAdA;;;;AAiBA,MAAM,kBAA4B;IAChC,qBACE;kBACE,cAAA,6LAAC,sIAAA,CAAA,iBAAc;sBACf,cAAA,6LAAC,+HAAA,CAAA,YAAS;;;;;;;;;;;AAKhB;KATM;uCAWS","debugId":null}}]
}